
services:
  # DATABASES
  #Account db
  postgres5411:
    image: postgres:latest
    container_name: postgres5411
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: account
    ports:
      - "5411:5432"
    networks:
      - app-network
    volumes:
      - postgres5411_data:/var/lib/postgresql/data

# transfer db
  postgres5421:
    image: postgres:latest
    container_name: postgres5421
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: transfer
    ports:
      - "5421:5432"
    networks:
      - app-network
    volumes:
      - postgres5421_data:/var/lib/postgresql/data
#transaction db
  postgres5451:
    image: postgres:latest
    container_name: postgres5451
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: transaction
    ports:
      - "5451:5432"
    networks:
      - app-network
    volumes:
      - postgres5451_data:/var/lib/postgresql/data

  # user service db
  postgres5461:
    image: postgres:latest
    container_name: postgres5461
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users
    ports:
      - "5461:5432"
    networks:
      - app-network
    volumes:
      - postgres5461_data:/var/lib/postgresql/data
#customerdb
  mongo:
    image: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - mongodb_data:/data/db

  # loan service db
  postgres5491:
    image: postgres:latest
    container_name: postgres5491
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: loan
    ports:
      - "5491:5432"
    networks:
      - app-network
    volumes:
      - postgres5491_data:/var/lib/postgresql/data

  # fraud service db
  postgres5495:
    image: postgres:latest
    container_name: postgres5495
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fraud
    ports:
      - "5495:5432"
    networks:
      - app-network
    volumes:
      - postgres5495_data:/var/lib/postgresql/data

  # payment service db
  postgres5477:
    image: postgres:latest
    container_name: postgres5477
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: payment
    ports:
      - "5477:5432"
    networks:
      - app-network
    volumes:
      - postgres5477_data:/var/lib/postgresql/data

  kafka:
    image: bitnami/kafka
    ports:
      - "9092:9092"
    networks:
      - app-network
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,EXTERNAL://localhost:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2

  # === CORE SERVICES ===

  config-server:
    build:
      context: ./config-server
    container_name: config-server
    ports:
      - "8070:8070"
    networks:
      - app-network
    restart: on-failure


  discovery-server:
    build:
      context: ./discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - app-network
    depends_on:
      config-server:
        condition: service_healthy
    restart: on-failure

  customer-service:
    build:
      context: ./customer-service
    container_name: customer-service
    ports:
      - "8071:8071"
    networks:
      - app-network
    depends_on:
      discovery-server:
      mongo:
      kafka:
      config-server:
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=dev
      - CONFIGURL=http://config-server:8070
    restart: on-failure

  account-service:
    build:
      context: ./account-service
    container_name: account-service
    ports:
      - "8010:8010"
    networks:
      - app-network
    depends_on:
      discovery-server:
      postgres5411:
      kafka:
      config-server:
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=dev
      - CONFIGURL=http://config-server:8070
    restart: on-failure

  transfer-service:
    build:
      context: ./transfer-service
    container_name: transfer-service
    ports:
      - "8021:8021"
    networks:
      - app-network
    depends_on:
      discovery-server:
      postgres5421:
      kafka:
      config-server:
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=dev
      - CONFIGURL=http://config-server:8070
    restart: on-failure

  transaction-service:
    build:
      context: ./transaction-service
    container_name: transaction-service
    ports:
      - "8040:8040"
    networks:
      - app-network
    depends_on:
      discovery-server:
      postgres5451:
      kafka:
      config-server:
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=dev
      - CONFIGURL=http://config-server:8070
    restart: on-failure

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8061:8061"
    networks:
      - app-network
    depends_on:
      discovery-server:
      postgres5461:
      kafka:
      config-server:
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=dev
      - CONFIGURL=http://config-server:8070
    restart: on-failure

  payment-service:
    build:
      context: ./payment-service
    container_name: payment-service
    ports:
      - "8077:8077"
    networks:
      - app-network
    depends_on:
      discovery-server:
      postgres5477:
      kafka:
      config-server:
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=dev
      - CONFIGURL=http://config-server:8070
    restart: on-failure

  loan-service:
    build:
      context: ./loan-service
    container_name: loan-service
    ports:
      - "8091:8091"
    networks:
      - app-network
    depends_on:
      discovery-server:
      postgres5491:
      kafka:
      config-server:
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=dev
      - CONFIGURL=http://config-server:8070
    restart: on-failure

  fraud-service:
    build:
      context: ./fraud-service
    container_name: fraud-service
    ports:
      - "8095:8095"
    networks:
      - app-network
    depends_on:
      discovery-server:
      postgres5495:
      kafka:
      config-server:
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=dev
      - CONFIGURL=http://config-server:8070
    restart: on-failure

networks:
  app-network:
    driver: bridge

volumes:
  postgres5411_data:
  postgres5421_data:
  postgres5451_data:
  postgres5461_data:
  postgres5491_data:
  postgres5495_data:
  mongodb_data:
  postgres5477_data:
